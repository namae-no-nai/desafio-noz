---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/authors":
    get:
      summary: list authors
      security:
      - bearerAuth: []
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: main_genre
        in: query
        required: false
        schema:
          type: string
      - name: age
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: create author
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                main_genre:
                  type: string
                age:
                  type: integer
              required:
              - name
              - main_genre
              - age
  "/api/authors/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show author
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    put:
      summary: update author
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                main_genre:
                  type: string
                age:
                  type: integer
              required:
              - name
              - main_genre
              - age
    delete:
      summary: delete author
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '204':
          description: successful
  "/api/books":
    get:
      summary: list books
      security:
      - bearerAuth: []
      parameters:
      - name: title
        in: query
        required: false
        schema:
          type: string
      - name: genre
        in: query
        required: false
        schema:
          type: string
      - name: description
        in: query
        required: false
        schema:
          type: string
      - name: published_at
        in: query
        required: false
        schema:
          type: string
      - name: publisher
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
    post:
      summary: create book
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                author_id:
                  type: integer
                genre:
                  type: string
                published_at:
                  type: integer
                publisher:
                  type: string
              required:
              - title
              - description
              - author_id
              - genre
              - published_at
              - publisher
  "/api/books/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show book
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    put:
      summary: update book
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                author_id:
                  type: integer
                genre:
                  type: string
                published_at:
                  type: integer
                publisher:
                  type: string
              required:
              - title
              - description
              - author_id
              - genre
              - published_at
              - publisher
    delete:
      summary: delete book
      security:
      - bearerAuth: []
      responses:
        '204':
          description: successful
  "/api/login":
    post:
      summary: login user
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
  "/api/users":
    post:
      summary: create user
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
securityDefinitions:
  Bearer:
    description: "..."
    type: apiKey
    name: Authorization
    in: header
securityDefinitions:
    Bearer:
      description: "..."
      type: apiKey
      name: Authorization
      in: header
